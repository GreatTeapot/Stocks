name: stocks
networks:
  dev:

services:
  postgres:
    image: postgres:17.2-alpine
    container_name: postgres
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: postgres
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}' ]
      interval: 5s
      timeout: 10s
      retries: 5
    env_file:
      - .env
    volumes:
      - .postgres:/var/lib/postgres/data
    restart: unless-stopped
    networks:
      - dev


  app:
     container_name: auth-app
     build:
       context: ./src/apps
     depends_on:
       - postgres
     command: [ "sh", "-c", "alembic upgrade head && python3 main.py" ]
     ports:
       - 8000:8000
     restart: unless-stopped
     env_file:
      - .env
     networks:
       - dev
#
#
#  nginx:
#    image: nginx:latest
#    ports:
#      - "80:80"
#    volumes:
#      - './nginx/nginx.conf:/etc/nginx/nginx.conf'
#    depends_on:
#      - app
#    networks:
#      - dev
#



#  redis:
#    image: redis:7
#    container_name: redis_news
#    command: --port 5370
#    expose:
#      - 5370
#    env_file:
#      - .env-non-dev




#  celery:
#    build:
#      context: .
#    env_file:
#      - .env-non-dev
#    container_name: celery_app
#    command: ["/app/docker/celery.sh", "celery"]
#    depends_on:
#      - redis
#
#  flower:
#    build:
#      context: .
#    env_file:
#      - .env-non-dev
#    container_name: flower_app
#    command: ["/test_app/docker/celery.sh", "flower"]
#    depends_on:
#      - redis
#      - celery
#    ports:
#      - 8888:5555